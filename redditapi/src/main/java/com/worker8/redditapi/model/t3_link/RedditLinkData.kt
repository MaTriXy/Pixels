package com.worker8.redditapi.model.t3_link

import com.worker8.redditapi.Gildings
import com.worker8.redditapi.Media
import com.worker8.redditapi.MediaEmbed
import com.worker8.redditapi.SecureMediaEmbed

data class RedditLinkData(
    //val approved_at_utc: Any,
    //val approved_by: Any,
    val archived: Boolean = false,
    val author: String = "",
    val author_flair_background_color: String = "",
    //val author_flair_css_class: Any,
    //val author_flair_richtext: List<Any>,
    //val author_flair_template_id: Any,
    //val author_flair_text: String,
    //val author_flair_text_color: String,
    //val author_flair_type: String,
    //val author_fullname: String,
    //val author_patreon_flair: Boolean,
    //val banned_at_utc: Any,
    //val banned_by: Any,
    val can_gild: Boolean = false,
    val can_mod_post: Boolean = false,
    //val category: Any,
    val clicked: Boolean = false,
    val content_categories: List<String> = listOf(),
    val contest_mode: Boolean = false,
    val created: Int = 0,
    val created_utc: Int = 0,
    val distinguished: String = "",
    val domain: String = "",
    val downs: Int = 0,
//        val edited: Int,
    val gilded: Int = 0,
    val gildings: Gildings = Gildings(),
    val hidden: Boolean = false,
    val hide_score: Boolean = false,
    val id: String = "",
    val is_crosspostable: Boolean = false,
    val is_meta: Boolean = false,
    val is_original_content: Boolean = false,
    val is_reddit_media_domain: Boolean = false,
    val is_robot_indexable: Boolean = false,
    val is_self: Boolean = false,
    val is_video: Boolean = false,
    //val likes: Any,
    val link_flair_background_color: String = "",
    //val link_flair_css_class: Any,
    //val link_flair_richtext: List<Any>,
    //val link_flair_template_id: Any,
    //val link_flair_text: Any,
    val link_flair_text_color: String = "",
    val link_flair_type: String = "",
    val locked: Boolean = false,
    val media: Media = Media(),
    val media_embed: MediaEmbed = MediaEmbed(),
    val media_only: Boolean = false,
    //val mod_note: Any,
    //val mod_reason_by: Any,
    //val mod_reason_title: Any,
    //val mod_reports: List<Any>,
    val name: String = "",
    val no_follow: Boolean = false,
    val num_comments: Int = 0,
    val num_crossposts: Int = 0,
    //val num_reports: Any,
    val over_18: Boolean = false,
    val parent_whitelist_status: String = "",
    val permalink: String = "",
    val pinned: Boolean = false,
    val pwls: Int = 0,
    val quarantine: Boolean = false,
    //val removal_reason: Any,
    //val report_reasons: Any,
    val saved: Boolean = false,
    val score: Int = 0,
    //val secure_media: Any,
    val secure_media_embed: SecureMediaEmbed = SecureMediaEmbed(),
    val selftext: String = "",
    val selftext_html: String = "",
    val send_replies: Boolean = false,
    val spoiler: Boolean = false,
    val stickied: Boolean = false,
    val subreddit: String = "",
    val subreddit_id: String = "",
    val subreddit_name_prefixed: String = "",
    val subreddit_subscribers: Int = 0,
    val subreddit_type: String = "",
    val suggested_sort: String = "",
    val thumbnail: String = "",
    val thumbnail_height: Int = 0,
    val thumbnail_width: Int = 0,
    val title: String = "",
    val ups: Int = 0,
    val url: String = "",
    //val user_reports: List<Any>,
    //val view_count: Any? = null,
    val visited: Boolean = false,
    val whitelist_status: String = "",
    val wls: Int = 0
)
